name: Deploy to Yandex Cloud 2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL -o yc https://storage.yandex-cloud.net/yandexcloud-yc/release/v2.3.0/linux/amd64/yc
          chmod +x yc
          mkdir -p $HOME/.yc/bin
          mv yc $HOME/.yc/bin/
          echo "$HOME/.yc/bin" >> $GITHUB_PATH
          yc --version

      - name: Configure YC CLI
        run: |
          yc config set token ${{ secrets.YC_API_KEY }}

      # Остальные шаги остаются без изменений

      - name: Generate IAM Token
        run: |
          YC_IAM_TOKEN=$(yc iam create-token --api-key "${{ secrets.YC_API_KEY }}")
          echo "YC_IAM_TOKEN=$YC_IAM_TOKEN" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY_ID }}/miniapp-prod:latest .

      - name: Login to Yandex Container Registry
        run: |
          echo "${{ env.YC_IAM_TOKEN }}" | docker login \
            -u iam \
            --password-stdin \
            cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY_ID }}

      - name: Push Docker image
        run: |
          docker push cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY_ID }}/miniapp-prod:latest

      - name: Update VM container
        env:
          YC_IAM_TOKEN: ${{ env.YC_IAM_TOKEN }}
        run: |
          yc compute instance update-container ${{ secrets.YC_VM_ID }} \
            --container-image cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY_ID }}/miniapp-prod:latest \
            --container-restart-policy always
